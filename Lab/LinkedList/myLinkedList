/**
 * 1) Program Purpose
 * 2) Solution and Algorithms
 * 3) Data Structures
 * 4) Program description and input/output
 * 5) Class Purpose
 *
 * @author kevin Seveur
 * Date
 */


public class myLinkedList {

    private Node head;
    private int size;

    public myLinkedList() {
        head = null;
    }

    public void addFirst(Object x) {

        Node n = new Node(x, head);
        head = n;
        size++;


    }

    public void addLast(Object x) {

        if (head == null) {
            addFirst(x);
        } else {
            Node curr = head;

            while (curr.next != null) {
                curr = curr.next;

            }
            curr.next = new Node(x);
        }
        size++;


    }

    public void addAtPosition(Object x, int index) {
       if (index > size + 1) {
           System.out.println("\nYour location request is larger than the current list!");
       }
        Node curr = head;
        Node next = curr.next;
        int count = 1;

        while (count != index - 1) {
            curr = next;
            count++;
        }

        Node n = new Node(x, curr.next);
        curr.next = n;
        size++;

    }

    public void removeAtPosition(int index) {

        if (index > size) {
            System.out.println("\n\nYour location request is larger than the current list!");
        } else if (index == 1) {
          head = head.next;
          size--;

        } else {
            Node curr = head;
            int count = 1;

            while (count != index - 1) {
                curr = curr.next;
                count++;
            }
                curr.next = curr.next.next;
                size--;
            }
        }


    public boolean isEmpty() {
        return head == null;
    }

    public int getSize() {
        return size;
    }

    public void printList() {
        Node curr = head;

        System.out.print("[ ");

        while (curr != null) {
            System.out.print(curr.data + " ");
            curr = curr.next;
        }
        System.out.println("]");
    }
}
